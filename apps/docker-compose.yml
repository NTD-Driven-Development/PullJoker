# version: '3'
name: pull_joker
services:
  db:
    image: postgres:16-alpine3.19
    volumes:
      - db-pj-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pull_joker
    ports:
      - "5434:5432"
    networks:
      - docker
  db_test:
    image: postgres:16-alpine3.19
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pull_joker_test
    ports:
      - "5435:5432"
    networks:
      - docker
  backend:
    image: node:20.12.2-alpine3.19
    working_dir: /apps/backend
    volumes:
      - ./backend:/apps/backend
      - ../packages/domain:/packages/domain
      - ../packages/socket:/packages/socket
    ports:
      - "3002:3002"
    command: sh -c "
        npm install &&
        npm run build &&
        npm start"
    depends_on:
      - db
    networks:
      - docker
  # frontend:
  #   image: node:20.12.2-alpine3.19
  #   working_dir: /apps/frontend
  #   environment:
  #       NODE_ENV: production
  #       NUXT_PUBLIC_USE_HTTPS: true
  #   volumes:
  #     - ./frontend:/apps/frontend
  #     - ../packages/domain:/packages/domain
  #     - ../packages/socket:/packages/socket
  #   ports:
  #     - "3011:3000"
  #   command: sh -c "
  #       npm install &&
  #       npm run build &&
  #       npm start"
  #   depends_on:
  #     - db
  #   networks:
  #     - docker

networks: 
  docker: 
    driver: bridge
volumes:
  db-pj-data: