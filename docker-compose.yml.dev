# version: '3'
name: pull_joker
services:
  web_server:
    image: nginx:1.21.4-alpine
    volumes:
      - ./apps/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./apps/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./apps/nginx:/var/www/
    ports:
      - "81:80"
    networks:
      - docker
  db:
    image: postgres:16-alpine3.19
    volumes:
      - db-pj-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pull_joker
    ports:
      - "5434:5432"
    networks:
      - docker
  db_test:
    image: postgres:16-alpine3.19
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pull_joker_test
    ports:
      - "5435:5432"
    networks:
      - docker
  backend:
    image: node:20.12.2-alpine3.19
    working_dir: /apps/backend
    volumes:
      - ./apps/backend:/apps/backend
      - ./packages/domain:/packages/domain
      - ./packages/socket:/packages/socket
    entrypoint: /bin/sh -c "sh entrypoint.sh; sleep infinity"
    depends_on:
      - db
    networks:
      - docker
  frontend:
    image: node:20.12.2-alpine3.19
    working_dir: /apps/frontend
    environment:
        NODE_ENV: production
        NUXT_PUBLIC_BACKEND_URL: 'http://127.0.0.1:8081'
    volumes:
      - ./apps/frontend:/apps/frontend
      - ./packages/domain:/packages/domain
      - ./packages/socket:/packages/socket
    entrypoint: /bin/sh -c "sh entrypoint.sh; sleep infinity"
    depends_on:
      - db
    networks:
      - docker

networks: 
  docker: 
    driver: bridge
volumes:
  db-pj-data: